; Jerusalem Player
; Jerusalem focuses on Monks, Arbalests, Siege Rams, Halbs, Skirms, and Camels.
; Adds in Fast Fire Ships and a few Elite Cannon Galleons towards the end of
; the game.

; TODO Onager refuses to attack ground trees, can't cut felled trees.

(defconst list-active 0)
(defconst status-ready 2)
(defconst status-resource 3)
(defconst search-order-asc 1)
(defconst object-data-distance 44)

; Monk with Relic object ID
(defconst monk-with-relic 286)

; Local search results
(defconst gl-local-total 100)
(defconst gl-local-last 101)
(defconst gl-remote-total 102)
(defconst gl-remote-last 103)

; Locations at which to place the first two additional Town Centers.
(defconst gl-tc-1-x 200)
(defconst gl-tc-1-y 201)
(defconst gl-tc-2-x 202)
(defconst gl-tc-2-y 203)
(defconst gl-num-placed-initial-tcs 204)

; Coordinates of the Wonder.
(defconst gl-wonder-x 210)
(defconst gl-wonder-y 211)

; Flag to indicate whether to process search results for sending units near the
; Wonder to attack it.
(defconst gl-attack-wonder-search-state 220)
(defconst no-search 0)
(defconst search-complete 1)

; Coordinates for Onager cutting of the forest east of Acre.
(defconst gl-tree-x 250)
(defconst gl-tree-y 251)
; Gate guarding the Onager DUC code.
(defconst gl-onager 252)

; Coordinates at which to build towers near the Gold Mine.
(defconst gl-tower0-x 253)
(defconst gl-tower0-y 254)
(defconst gl-tower1-x 255)
(defconst gl-tower1-y 256)

; Point for targeting the attack ground for cutting trees.
(defconst gl-attack-ground-x 257)
(defconst gl-attack-ground-y 258)

; Acre Docks search point.
(defconst gl-harbor-x 270)
(defconst gl-harbor-y 271)
; Acre Docks attack angle.
(defconst gl-sea-x 272)
(defconst gl-sea-y 273)
(defconst gl-cannon-galleon 274)

; Goals for holding the x and y coordinates of the secondary Gold.
(defconst gl-gold-main-x 300)
(defconst gl-gold-main-y 301)
(defconst gl-gold-main-search 302)
(defconst gl-gold-island-x 303)
(defconst gl-gold-island-y 304)
(defconst gl-gold-island-search 305)

; Timer to launch repeated attacks once attacking starts.
(defconst t-attack 1)
(defconst attack-interval 60)

; Timer to check for units near the wonder and make them attack.
(defconst t-near-wonder 2)
(defconst near-wonder-interval 45)

; Timer checking the status of the mine.
(defconst t-gold-main-search 3)
(defconst t-gold-island-search 4)
(defconst mine-interval 10)

; Timer for controlling Onager cutting.
(defconst t-onager 5)
(defconst i-onager 5)

; Timer for managing Cannon Galleon micro.
(defconst t-cannon-galleon 6)
(defconst i-cannon-galleon 5)

; Positions for where to build the forward Docks.
(defconst gl-dock1-x 350)
(defconst gl-dock1-y 351)
(defconst gl-dock2-x 352)
(defconst gl-dock2-y 353)
(defconst gl-dock3-x 354)
(defconst gl-dock3-y 355)
(defconst gl-dock4-x 356)
(defconst gl-dock4-y 357)

; Initializes strategic numbers.
(defrule
  (true)
=>
  ; Enables multiple buildings of the same type to be constructed at once.
  (set-strategic-number sn-enable-new-building-system 1)

  ; Allows dropsites to be adjacent to resources.
  (set-strategic-number sn-allow-adjacent-dropsites 1)

  ; Initializes Villagers to construct buildings.
  (set-strategic-number sn-percent-civilian-explorers 0)
  (set-strategic-number sn-percent-civilian-builders 100)
  (set-strategic-number sn-percent-civilian-gatherers 0)
  (set-strategic-number sn-cap-civilian-explorers 0)
  (set-strategic-number sn-cap-civilian-builders 200)
  (set-strategic-number sn-total-number-explorers 1)
  (set-strategic-number sn-number-explore-groups 1)
  (set-strategic-number sn-maximum-explore-group-size 1)

  ; Initializes Army to defend.
  (set-strategic-number sn-percent-attack-soldiers 0)

  ; Initializes land Villager gatherer percentages.
  (set-strategic-number sn-food-gatherer-percentage 30)
  (set-strategic-number sn-wood-gatherer-percentage 45)
  (set-strategic-number sn-gold-gatherer-percentage 25)
  (set-strategic-number sn-stone-gatherer-percentage 0)

  ; Makes attack groups larger.
  (set-strategic-number sn-maximum-attack-group-size 200)
  (set-strategic-number sn-minimum-attack-group-size 20)

  ; Allows units to patroll while enroute to attacking distant targets.
  (set-strategic-number sn-enable-patrol-attack 1)

  ; Target the human player 1 for attacks.
  (set-strategic-number sn-target-player-number 1)

  ; Enables intelligent attacking.
	(set-strategic-number sn-attack-intelligence 1)

  ; Let's the AI attack walls.
	(set-strategic-number sn-wall-targeting-mode 1)

  ; Prevents cancelling buildings when they are significantly completed.
  (set-strategic-number sn-percent-building-cancellation 1)

  ; Assigns 5 Villagers to build a Tower.
  (up-assign-builders c: watch-tower c: 5)
  (disable-self)
)

; Initializes goals.
(defrule
  (true)
=>
  ; Initializes the TC placement locations.
  (set-goal gl-tc-1-x 162)
  (set-goal gl-tc-1-y 182)
  (set-goal gl-tc-2-x 139)
  (set-goal gl-tc-2-y 184)
  (set-goal gl-num-placed-initial-tcs 0)

  ; Initializes the forest cutting search coordinates.
  (set-goal gl-tree-x 100)
  (set-goal gl-tree-y 151)
  (set-goal gl-onager 0)

  ; Initializes Gold coordinates.
  (set-goal gl-gold-main-x 133)
  (set-goal gl-gold-main-y 181)
  (set-goal gl-gold-island-x 104)
  (set-goal gl-gold-island-y 177)

  ; Initializes Tower coordinates.
  (set-goal gl-tower0-x 102)
  (set-goal gl-tower0-y 180)
  (set-goal gl-tower1-x 100)
  (set-goal gl-tower1-y 170)

  ; Initializes DUC guard goals.
  (set-goal gl-attack-wonder-search-state no-search)
  (set-goal gl-gold-main-search no-search)
  (set-goal gl-gold-island-search no-search)

  ; Sets the position for placing the forward docks.
  (set-goal gl-dock1-x 96)
  (set-goal gl-dock1-y 180)
  (set-goal gl-dock2-x 94)
  (set-goal gl-dock2-y 185)
  (set-goal gl-dock3-x 93)
  (set-goal gl-dock3-y 173)
  (set-goal gl-dock4-x 96)
  (set-goal gl-dock4-y 163)

  (disable-self)
)

; Initializes more Goals.
(defrule
  (true)
=>
  ; Acre Docks search point.
  (set-goal gl-harbor-x 70)
  (set-goal gl-harbor-y 145)
  ; Acre Docks attack angle.
  (set-goal gl-sea-x 77)
  (set-goal gl-sea-y 169)
  (set-goal gl-cannon-galleon 0)
  (disable-self)
)

; Resign condition

(defrule
	(military-population < 4)
	(unit-type-count-total villager < 1)
	(not (can-train villager))
  (building-type-count town-center < 1)
  (building-type-count castle < 1)
=>
  (chat-to-all "Odsblood! I meant to pick Franks.")
  (chat-to-all "No wonder thou wert victorious! I shalt abdicate.")
  (resign)
  (disable-self)
)

; Cheat resources

(defrule
  (game-time >= 840)
=>
  (cc-add-resource food 1000)
  (cc-add-resource wood 1000)
  (cc-add-resource gold 1000)
  (disable-self)
)

(defrule
  (game-time >= 1020)
=>
  (cc-add-resource food 1000)
  (cc-add-resource wood 1000)
  (cc-add-resource gold 1000)
  (disable-self)
)

(defrule
  (game-time >= 1200)
=>
  (cc-add-resource food 1000)
  (cc-add-resource wood 1000)
  (cc-add-resource gold 1000)
  (disable-self)
)

(defrule
  (game-time >= 1350)
=>
  (cc-add-resource food 1000)
  (cc-add-resource wood 1000)
  (cc-add-resource gold 1000)
  (disable-self)
)

(defrule
  (game-time >= 1500)
=>
  (cc-add-resource food 1000)
  (cc-add-resource wood 1000)
  (cc-add-resource gold 1000)
  (disable-self)
)

; Building management.

(defrule
  (building-type-count-total lumber-camp == 0)
  (building-type-count-total town-center == 0)
  (wood-amount < 100)
  (can-buy-commodity wood)
=>
  (buy-commodity wood)
)

(defrule
  (building-type-count-total town-center < 3)
  (stone-amount < 100)
  (can-buy-commodity stone)
=>
  (buy-commodity stone)
)

; Places the first two TCs at set locations.
(defrule
  (up-can-build-line 0 gl-tc-1-x c: town-center-foundation)
=>
  (up-build-line gl-tc-1-x gl-tc-1-x c: town-center-foundation)
  (up-modify-goal gl-num-placed-initial-tcs c:+ 1)
  (disable-self)
)

(defrule
  (up-can-build-line 0 gl-tc-2-x c: town-center-foundation)
=>
  (up-build-line gl-tc-2-x gl-tc-2-x c: town-center-foundation)
  (up-modify-goal gl-num-placed-initial-tcs c:+ 1)
  (disable-self)
)

(defrule
  (building-type-count-total town-center < 3)
  (can-build town-center)
  (goal gl-num-placed-initial-tcs 2)
=>
  (build town-center)
)

(defrule
  (population-headroom > 0)
  (housing-headroom <= 10)
  (up-pending-objects c: house < 3) ; Build at most 3 Houses at once.
  (can-build house)
=>
  (build house)
)

(defrule
  (or
    (building-type-count-total monastery < 2)
    (and
      (game-time > 1200)
      (building-type-count-total monastery < 5)
    )
  )
  (can-build monastery)
=>
  (build monastery)
)

(defrule
  (building-type-count-total stable < 2)
  (can-build stable)
=>
  (build stable)
)

(defrule
  (game-time > 1200)
  (building-type-count-total siege-workshop < 7)
  (can-build siege-workshop)
=>
  (build-forward siege-workshop)
)

(defrule
  (building-type-count-total siege-workshop < 2)
  (can-build siege-workshop)
=>
  (build siege-workshop)
)

(defrule
  (building-type-count-total barracks < 2)
  (can-build barracks)
=>
  (build barracks)
)

(defrule
  (building-type-count-total archery-range < 2)
  (can-build archery-range)
=>
  (build archery-range)
)

(defrule
  (game-time > 1200)
  (up-can-build-line 0 gl-dock1-x c: dock)
=>
  (up-build-line gl-dock1-x gl-dock1-x c: dock)
)

(defrule
  (game-time > 1200)
  (up-can-build-line 0 gl-dock2-x c: dock)
=>
  (up-build-line gl-dock2-x gl-dock2-x c: dock)
)

(defrule
  (game-time > 1200)
  (up-can-build-line 0 gl-dock3-x c: dock)
=>
  (up-build-line gl-dock3-x gl-dock3-x c: dock)
)

(defrule
  (game-time > 1200)
  (up-can-build-line 0 gl-dock4-x c: dock)
=>
  (up-build-line gl-dock4-x gl-dock4-x c: dock)
)

(defrule
  (building-type-count-total market < 1)
  (can-build market)
=>
  (build market)
)

(defrule
  (or
    (building-type-count-total lumber-camp == 0)
    (and
      (building-type-count-total lumber-camp > 0)
      (and
        (dropsite-min-distance wood > 4)
        (dropsite-min-distance wood < 255)
      )
    )
  )
  (can-build lumber-camp)
=>
  (build lumber-camp)
)

(defrule
  (building-type-count-total lumber-camp < 3)
  (unit-type-count-total villager > 30)
  (can-build lumber-camp)
=>
  (build lumber-camp)
)

; Farms and Mills

(defrule
  (or
    (building-type-count-total farm < 10)
    (and
      (game-time > 360)
      (building-type-count-total farm < 80)
    )
  )
  (up-pending-objects c: farm < 5)
  (idle-farm-count < 5)
  (can-build farm)
=>
  (build farm)
)

(defrule
  (building-type-count-total farm > 20)
  (building-type-count-total mill < 3)
  (can-build mill)
=>
  (build mill)
)

; Mining camp to saturate the "main" Gold.
(defrule
  (up-timer-status t-gold-main-search != timer-running)
=>
  (set-goal gl-gold-main-search search-complete)
  (up-full-reset-search)
  (up-set-target-point gl-gold-main-x)
  (up-filter-distance c: -1 c: 10)
  (up-find-local c: mining-camp c: 1)
  (up-filter-status c: status-resource c: list-active)
  (up-find-resource c: gold c: 10)
  (up-get-search-state gl-local-total)
)

(defrule
  (goal gl-gold-main-search search-complete)
  (up-compare-goal gl-local-total == 0)
  (up-compare-goal gl-remote-total > 0)
  (not (up-pending-placement c: mining-camp))
  (up-pending-objects c: mining-camp == 0)
  (up-can-build 1 c: mining-camp)
=>
  (up-set-target-point gl-gold-main-x)
  (up-build place-point 0 c: mining-camp)
)

(defrule
  (goal gl-gold-main-search search-complete)
=>
  (set-goal gl-gold-main-search no-search)
  (enable-timer t-gold-main-search mine-interval)
)

; Mining camp near the "island" Gold.
(defrule
  (game-time > 300)
  (up-timer-status t-gold-island-search != timer-running)
=>
  (set-goal gl-gold-island-search search-complete)
  (up-full-reset-search)
  (up-set-target-point gl-gold-island-x)
  (up-filter-distance c: -1 c: 10)
  (up-find-local c: mining-camp c: 1)
  (up-filter-status c: status-resource c: list-active)
  (up-find-resource c: gold c: 10)
  (up-get-search-state gl-local-total)
)

(defrule
  (goal gl-gold-island-search search-complete)
  (up-compare-goal gl-local-total == 0)
  (up-compare-goal gl-remote-total > 0)
  (not (up-pending-placement c: mining-camp))
  (up-pending-objects c: mining-camp == 0)
  (up-can-build 1 c: mining-camp)
=>
  (up-set-target-point gl-gold-island-x)
  (up-build place-point 0 c: mining-camp)
)

(defrule
  (goal gl-gold-island-search search-complete)
=>
  (set-goal gl-gold-island-search no-search)
  (enable-timer t-gold-island-search mine-interval)
)

(defrule
  (game-time > 300)
  (stone-amount < 125)
  (can-buy-commodity stone)
=>
  (buy-commodity stone)
)

(defrule
  (game-time > 300)
  (not (town-under-attack))
  (up-can-build-line 0 gl-tower0-x c: watch-tower)
=>
  (up-build-line gl-tower0-x gl-tower0-x c: watch-tower)
)

(defrule
  (game-time > 300)
  (not (town-under-attack))
  (up-can-build-line 0 gl-tower1-x c: watch-tower)
=>
  (up-build-line gl-tower1-x gl-tower1-x c: watch-tower)
)

(defrule
  (unit-type-count-total villager < 100)
  (can-train villager)
=>
  (train villager)
)

(defrule
  (game-time > 540)
  (unit-type-count-total mangonel-line < 1)
  (can-train mangonel-line)
=>
  (train mangonel-line)
)

(defrule
  (game-time > 1200)
  (unit-type-count-total battering-ram-line < 30)
  (can-train battering-ram-line)
=>
  (train battering-ram-line)
)

(defrule
  (or
    (and
      (unit-type-count-total monk < 3)
      (unit-type-count-total monk-with-relic >= 1)
    )
    (and
      (unit-type-count-total monk < 4)
      (unit-type-count-total monk-with-relic == 0)
    )
  )
  (can-train monk)
=>
  (train monk)
)

(defrule
  (or
    (unit-type-count-total archer-line < 20)
    (and
      (game-time > 1200)
      (unit-type-count-total archer-line < 60)
    )
  )
  (can-train archer-line)
=>
  (train archer-line)
)

(defrule
  (unit-type-count-total battering-ram-line < 6)
  (can-train battering-ram-line)
=>
  (train battering-ram-line)
)

(defrule
  (game-time > 1200)
  (unit-type-count-total monk < 12)
  (can-train monk)
=>
  (train monk)
)

(defrule
  (unit-type-count-total spearman-line < 10)
  (can-train spearman-line)
=>
  (train spearman-line)
)

(defrule
  (unit-type-count-total camel-line < 6)
  (can-train camel-line)
=>
  (train camel-line)
)

(defrule
  (unit-type-count-total skirmisher-line < 10)
  (can-train skirmisher-line)
=>
  (train skirmisher-line)
)

(defrule
  (game-time > 1200)
  (unit-type-count-total cannon-galleon-line < 2)
  (can-train cannon-galleon-line)
=>
  (train cannon-galleon-line)
)

(defrule
  (game-time > 1200)
  (unit-type-count-total fire-ship-line < 6)
  (can-train fire-ship-line)
=>
  (train fire-ship-line)
)

(defrule
  (game-time > 1200)
  (unit-type-count-total cannon-galleon-line < 8)
  (can-train cannon-galleon-line)
=>
  (train cannon-galleon-line)
)

(defrule
  (game-time > 1200)
  (unit-type-count-total fire-ship-line < 20)
  (can-train fire-ship-line)
=>
  (train fire-ship-line)
)

; Attack management

(defrule
  (town-under-attack)
=>
  (attack-now)
)

(defrule
  (game-time > 480)
=>
  (set-strategic-number sn-percent-attack-soldiers 100)
  (attack-now)
  (enable-timer t-attack attack-interval)
  (enable-timer t-near-wonder near-wonder-interval)
  (disable-self)
)

(defrule
  (timer-triggered t-attack)
=>
  (attack-now)
  (enable-timer t-attack attack-interval)
)

; Periodically tasks units within 30 tiles of the Wonder to attack it.
(defrule
  (timer-triggered t-near-wonder)
=>
  (set-goal gl-attack-wonder-search-state search-complete)
  (up-full-reset-search)
  (set-strategic-number sn-focus-player-number 1)
  (up-find-remote c: wonder c: 1)
  (up-get-search-state gl-local-total)
  (enable-timer t-near-wonder near-wonder-interval)
)

; TODO test
(defrule
  (goal gl-attack-wonder-search-state search-complete)
  (up-compare-goal gl-remote-total > 0)
=>
  (up-set-target-object search-remote c: 0)
  (up-get-point position-object gl-wonder-x)
  (up-set-target-point gl-wonder-x)
  (up-filter-distance c: -1 c: 30)
  (up-find-local c: battering-ram-line c: 60)
  (up-find-local c: archer-line c: 60)
  (up-find-local c: cannon-galleon-line c: 60)
  (up-get-search-state gl-local-total)
)

(defrule
  (goal gl-attack-wonder-search-state search-complete)
  (up-compare-goal gl-local-total > 0)
=>
  (up-target-objects 1 action-default -1 stance-stand-ground)
)

(defrule
  (goal gl-attack-wonder-search-state search-complete)
=>
  (set-goal gl-attack-wonder-search-state no-search)
)

(defrule
  (up-timer-status t-onager != timer-running)
  (goal gl-onager 0)
=>
  (set-goal gl-onager 1)
)

(defrule
  (goal gl-onager 1)
=>
  (up-full-reset-search)
  (up-find-local c: mangonel-line c: 1)
  (up-set-target-point gl-tree-x)
  (up-filter-distance c: -1 c: 7)
  (up-filter-status c: status-ready c: list-active)
  (up-find-resource c: wood c: 20)
  (up-get-search-state gl-local-total)
)

(defrule
  (goal gl-onager 1)
  (up-compare-goal gl-local-total > 0)
  (up-compare-goal gl-remote-total > 0)
=>
  (up-target-objects 0 action-default -1 -1)
)

(defrule
  (goal gl-onager 1)
=>
  (set-goal gl-onager 0)
  (enable-timer t-onager i-onager)
)

; Tasks Cannon Galleons to attack towers, Castles, Docks, and the Wonder.
; And in the final minute, ignore everything and just go for the Wonder.
(defrule
  (up-timer-status t-cannon-galleon != timer-running)
  (goal gl-cannon-galleon 0)
=>
  (set-goal gl-cannon-galleon 1)
)

(defrule
  (game-time < 1740)
  (goal gl-cannon-galleon 1)
=>
  (up-full-reset-search)
  (up-find-local c: cannon-galleon-line c: 20)
  (up-set-target-point gl-harbor-x)
  (up-filter-distance c: -1 c: 30)
  (set-strategic-number sn-focus-player-number 1)
  (up-find-remote c: tower-class c: 10)
  (up-find-remote c: castle c: 5)
  (up-find-remote c: dock c: 10)
  (up-find-remote c: wonder c: 1)
  (up-set-target-point gl-sea-x)
  (up-clean-search search-remote object-data-distance search-order-asc)
  (up-get-search-state gl-local-total)
)

(defrule
  (game-time >= 1740)
  (goal gl-cannon-galleon 1)
=>
  (up-full-reset-search)
  (up-find-local c: cannon-galleon-line c: 20)
  (set-strategic-number sn-focus-player-number 1)
  (up-find-remote c: wonder c: 1)
  (up-get-search-state gl-local-total)
)

(defrule
  (goal gl-cannon-galleon 1)
  (up-compare-goal gl-local-total > 0)
  (up-compare-goal gl-remote-total > 0)
=>
  (up-set-target-object search-remote c: 0)
  (up-target-objects 1 action-default -1 -1)
)

(defrule
  (goal gl-cannon-galleon 1)
=>
  (set-goal gl-cannon-galleon 0)
  (enable-timer t-cannon-galleon i-cannon-galleon)
)
